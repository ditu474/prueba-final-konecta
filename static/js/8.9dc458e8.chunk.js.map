{"version":3,"sources":["hooks/use-http/index.js","services/breakingBad/index.js","components/QuoteItem/index.js","services/quoteRate/index.js","components/QuoteRates/RateList/index.js","components/QuoteRates/index.js","pages/Quote/index.js"],"names":["SEND_ACTION","SUCCESS_ACTION","ERROR_ACTION","httpReducer","state","action","newState","type","response","error","loading","responseData","errorMessage","useHttp","reqFunc","React","useReducer","httpState","dispatch","isMounted","useRef","useEffect","current","sendRequest","useCallback","params","a","res","message","BASE_URL","getCharactersFiltered","limit","offset","url","fetch","then","ok","json","Error","getAuthorQuotes","author","authorFix","trim","replace","getQuoteById","quoteId","useStyles","makeStyles","theme","card","width","margin","quote","fontStyle","fontSize","info","display","spacing","alignItems","h5","fontWeight","QuoteItem","classes","history","useHistory","Card","variant","className","CardContent","series","CardActions","Button","size","color","onClick","push","quote_id","QUOTE_RATE_KEY","getSavedQuoteRates","savedQuoteRates","localStorage","getItem","JSON","parse","saveQuoteRatesLocally","quoteRates","setItem","stringify","err","console","RateList","content","rates","length","ListItem","ListItemText","primary","map","rate","count","value","isHalf","activeColor","edit","id","List","QuoteRates","useParams","useState","setQuoteRates","rateAverage","setRateAverage","quoteRateObj","find","quoteRate","String","getQuoteRate","newRateAvrg","reduce","prevVal","currentVal","style","flexDirection","toFixed","onChange","newRating","newRate","totalRates","calculateNewRate","Math","random","prevQuoteRates","saveQuoteRates","Quote","path","useRouteMatch","useHtpp","LoadingSpinner","exact"],"mappings":"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","file":"static/js/8.9dc458e8.chunk.js","sourcesContent":["import React from 'react';\n\nconst SEND_ACTION = 'SEND';\nconst SUCCESS_ACTION = 'SUCCESS';\nconst ERROR_ACTION = 'ERROR';\nconst RESET_ACTION = 'RESET';\n\nconst httpReducer = (state, action) => {\n\tlet newState = state;\n\tswitch (action.type) {\n\t\tcase SEND_ACTION:\n\t\t\tnewState = {\n\t\t\t\tresponse: null,\n\t\t\t\terror: null,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase SUCCESS_ACTION:\n\t\t\tnewState = {\n\t\t\t\tresponse: action.responseData,\n\t\t\t\terror: null,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase ERROR_ACTION:\n\t\t\tnewState = {\n\t\t\t\tresponse: null,\n\t\t\t\terror: action.errorMessage,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase RESET_ACTION:\n\t\t\tnewState = {\n\t\t\t\tresponse: null,\n\t\t\t\terror: null,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn newState;\n\t}\n};\n\nexport default function useHttp(reqFunc) {\n\tconst [httpState, dispatch] = React.useReducer(httpReducer, {\n\t\tresponse: null,\n\t\tloading: false,\n\t\terror: null,\n\t});\n\tconst isMounted = React.useRef(true);\n\n\tReact.useEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false;\n\t\t};\n\t}, []);\n\n\tconst sendRequest = React.useCallback(\n\t\tasync (params) => {\n\t\t\tdispatch({\n\t\t\t\ttype: SEND_ACTION,\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tconst res = await reqFunc(params);\n\t\t\t\tif (isMounted.current) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: SUCCESS_ACTION,\n\t\t\t\t\t\tresponseData: res,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: ERROR_ACTION,\n\t\t\t\t\terrorMessage: err.message || 'Something went wrong!',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[reqFunc]\n\t);\n\n\treturn {\n\t\t...httpState,\n\t\tsendRequest,\n\t};\n}\n","const BASE_URL = 'https://www.breakingbadapi.com/api';\n\nexport const getBreakingBadCharacters = async () => {\n\tconst url = `${BASE_URL}/characters`;\n\treturn fetch(url).then((res) => {\n\t\tif (res.ok) return res.json();\n\t\tthrow new Error('Error fetching Breaking Bad characters');\n\t});\n};\n\nexport const getCharactersFiltered = async ({ limit, offset }) => {\n\tconst url = `${BASE_URL}/characters?limit=${limit}&offset=${offset}`;\n\treturn fetch(url).then((res) => {\n\t\tif (res.ok) return res.json();\n\t\tthrow new Error('Error fetching Breaking Bad characters');\n\t});\n};\n\nexport const getAuthorQuotes = async ({ author }) => {\n\tconst authorFix = author.trim().replace(' ', '+');\n\tconst url = `${BASE_URL}/quote?author=${authorFix}`;\n\treturn fetch(url).then((res) => {\n\t\tif (res.ok) return res.json();\n\t\tthrow new Error(`Error fetching quotes for ${author}`);\n\t});\n};\n\nexport const getQuoteById = async ({ quoteId }) => {\n\tconst url = `${BASE_URL}/quotes/${quoteId}`;\n\treturn fetch(url).then((res) => {\n\t\tif (res.ok) return res.json();\n\t\tthrow new Error(`Error fetching quote with ID: ${quoteId}`);\n\t});\n};\n","import { Button, Card, CardActions, CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n\tcard: {\n\t\twidth: 'fit-content',\n\t\tmargin: '0 auto',\n\t},\n\tquote: {\n\t\tfontStyle: 'italic',\n\t\tfontSize: '1.2rem',\n\t},\n\tinfo: {\n\t\tdisplay: 'flex',\n\t\tmargin: theme.spacing(1, 0),\n\t\talignItems: 'center',\n\t},\n\th5: {\n\t\tfontWeight: 'normal',\n\t\tfontSize: '1rem',\n\t\tmargin: theme.spacing(0, 1),\n\t},\n}));\n\nconst QuoteItem = ({ quote }) => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\n\tconst handleRateClick = () => {\n\t\thistory.push(`/quote/${quote.quote_id}/rate`);\n\t};\n\n\tconst handleCommentsClick = () => {\n\t\thistory.push(`/quote/${quote.quote_id}/comments`);\n\t};\n\n\treturn (\n\t\t<Card variant=\"outlined\" className={classes.card}>\n\t\t\t<CardContent>\n\t\t\t\t<em className={classes.quote}>\"{quote.quote}\"</em>\n\t\t\t\t<div className={classes.info}>\n\t\t\t\t\t<label>Author: </label>\n\t\t\t\t\t<h5 className={classes.h5}>{quote.author}</h5>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.info}>\n\t\t\t\t\t<label>Serie: </label>\n\t\t\t\t\t<h5 className={classes.h5}>{quote.series}</h5>\n\t\t\t\t</div>\n\t\t\t</CardContent>\n\t\t\t<CardActions>\n\t\t\t\t<Button size=\"small\" color=\"secondary\" onClick={handleCommentsClick}>\n\t\t\t\t\tComentarios\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"small\" color=\"secondary\" onClick={handleRateClick}>\n\t\t\t\t\tCalificación\n\t\t\t\t</Button>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n};\n\nQuoteItem.propTypes = {\n\tquote: PropTypes.shape({\n\t\tquote: PropTypes.string.isRequired,\n\t\tauthor: PropTypes.string.isRequired,\n\t\tseries: PropTypes.string.isRequired,\n\t}),\n};\n\nexport default QuoteItem;\n","const QUOTE_RATE_KEY = 'quoteRate';\n\nconst getSavedQuoteRates = () => {\n\tconst savedQuoteRates = localStorage.getItem(QUOTE_RATE_KEY);\n\tif (!savedQuoteRates) {\n\t\treturn [];\n\t}\n\treturn JSON.parse(savedQuoteRates);\n};\n\nconst saveQuoteRatesLocally = (quoteRates) => {\n\ttry {\n\t\tlocalStorage.setItem(QUOTE_RATE_KEY, JSON.stringify(quoteRates));\n\t} catch (err) {\n\t\tconsole.error('Error saving quoteRates: ', err.message);\n\t}\n};\n\nexport const getQuoteRate = (quoteId) => {\n\tconst quoteRates = getSavedQuoteRates();\n\n\tif (quoteRates.length === 0) return [];\n\n\tconst quoteRateObj = quoteRates.find(\n\t\t(quoteRate) => quoteRate.id === String(quoteId)\n\t);\n\tif (!quoteRateObj) {\n\t\treturn [];\n\t}\n\treturn quoteRateObj.rates;\n};\n\nexport const saveQuoteRates = (quoteId, quoteRate) => {\n\tconst quoteRates = getSavedQuoteRates();\n\tif (quoteRates.length === 0) {\n\t\tsaveQuoteRatesLocally([{ id: quoteId, rates: [quoteRate] }]);\n\t\treturn;\n\t}\n\n\tconst quoteRateObj = quoteRates.find(\n\t\t(quoteRate) => quoteRate.id === String(quoteId)\n\t);\n\tif (!quoteRateObj) {\n\t\tsaveQuoteRatesLocally([{ id: quoteId, rates: [quoteRate] }, ...quoteRates]);\n\t\treturn;\n\t}\n\n\tquoteRateObj.rates = [quoteRate, ...quoteRateObj.rates];\n\tsaveQuoteRatesLocally(quoteRates);\n};\n","import { List, ListItem, ListItemText } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ReactStars from 'react-rating-stars-component';\n\nconst RateList = ({ rates }) => {\n\tlet content;\n\tif (rates.length === 0) {\n\t\tcontent = (\n\t\t\t<ListItem>\n\t\t\t\t<ListItemText primary=\"Añade una calificación\" />\n\t\t\t</ListItem>\n\t\t);\n\t} else {\n\t\tcontent = rates.map((rate) => (\n\t\t\t<ListItem key={rate.id}>\n\t\t\t\t<ReactStars\n\t\t\t\t\tcount={5}\n\t\t\t\t\tvalue={rate.rate}\n\t\t\t\t\tsize={40}\n\t\t\t\t\tisHalf={true}\n\t\t\t\t\tactiveColor=\"#ffd700\"\n\t\t\t\t\tedit={false}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t));\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Historial</h2>\n\t\t\t<List>{content}</List>\n\t\t</>\n\t);\n};\n\nRateList.propTypes = {\n\trates: PropTypes.array.isRequired,\n};\n\nexport default RateList;\n","import React from 'react';\nimport ReactStars from 'react-rating-stars-component';\nimport { useParams } from 'react-router-dom';\nimport { getQuoteRate, saveQuoteRates } from 'services/quoteRate';\nimport RateList from './RateList';\n\nconst QuoteRates = () => {\n\tconst { id } = useParams();\n\tconst [quoteRates, setQuoteRates] = React.useState([]);\n\tconst [rateAverage, setRateAverage] = React.useState(0);\n\n\tReact.useEffect(() => {\n\t\tconst savedQuoteRates = getQuoteRate(id);\n\t\tsetQuoteRates(savedQuoteRates);\n\n\t\tif (savedQuoteRates.length > 0) {\n\t\t\tconst sum = savedQuoteRates.reduce(\n\t\t\t\t(prevVal, currentVal) => prevVal + currentVal.rate,\n\t\t\t\t0\n\t\t\t);\n\t\t\tconst newRateAvrg = sum / savedQuoteRates.length;\n\t\t\tsetRateAverage(newRateAvrg);\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tconst calculateNewRate = (newRate) => {\n\t\tconst totalRates = quoteRates.length;\n\t\tconst lastSum = rateAverage * totalRates;\n\t\tconst newAverage = (lastSum + newRate) / (totalRates + 1);\n\t\tsetRateAverage(newAverage);\n\t};\n\n\tconst addRateHandler = (newRating) => {\n\t\tcalculateNewRate(newRating);\n\t\tconst rate = { id: Math.random() + newRating, rate: newRating };\n\t\tsetQuoteRates((prevQuoteRates) => [rate, ...prevQuoteRates]);\n\t\tsaveQuoteRates(id, rate);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\talignItems: 'center',\n\t\t\t}}\n\t\t>\n\t\t\t<h4>Promedio: {rateAverage.toFixed(1)}</h4>\n\t\t\t<ReactStars\n\t\t\t\tcount={5}\n\t\t\t\tonChange={addRateHandler}\n\t\t\t\tsize={40}\n\t\t\t\tisHalf={true}\n\t\t\t\tactiveColor=\"#ffd700\"\n\t\t\t/>\n\t\t\t<RateList rates={quoteRates} />\n\t\t</div>\n\t);\n};\n\nexport default QuoteRates;\n","import LoadingSpinner from 'components/LoadingSpinner';\nimport QuoteItem from 'components/QuoteItem';\nimport QuoteRates from 'components/QuoteRates';\nimport useHtpp from 'hooks/use-http';\nimport React from 'react';\nimport { Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\nimport { getQuoteById } from 'services/breakingBad';\n\nconst Quote = () => {\n\tconst { id } = useParams();\n\tconst { path } = useRouteMatch();\n\tconst { response, loading, error, sendRequest } = useHtpp(getQuoteById);\n\n\tReact.useEffect(() => {\n\t\tsendRequest({ quoteId: id });\n\t}, [id, sendRequest]);\n\n\tif (loading) {\n\t\treturn <LoadingSpinner />;\n\t} else if (error || !response || response.length === 0) {\n\t\treturn <h4>No se logró encontrar la información de la frase {id}</h4>;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<QuoteItem quote={response[0]} />\n\t\t\t<Switch>\n\t\t\t\t<Route path={`${path}/comments`} exact>\n\t\t\t\t\t<span>Comentarios</span>\n\t\t\t\t</Route>\n\t\t\t\t<Route path={`${path}/rate`} exact>\n\t\t\t\t\t<QuoteRates />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</>\n\t);\n};\n\nexport default Quote;\n"],"sourceRoot":""}