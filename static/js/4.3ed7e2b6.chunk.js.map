{"version":3,"sources":["components/BookstoreForm/index.js","components/MenuButton/index.js","components/BookstoreQuotes/index.js","components/Bookstores/index.js","pages/Bookstore/index.js"],"names":["initialValues","name","useStyles","makeStyles","theme","form","display","justifyContent","alignItems","flexDirection","width","marginBottom","spacing","input","BookstoreForm","onAddBookstore","classes","validate","errors","nameError","validator","isAlpha","ignore","nameValidator","onSubmit","values","setSubmitting","resetForm","trim","handleChange","handleBlur","handleSubmit","touched","isSubmitting","className","TextField","variant","placeholder","type","id","onChange","onBlur","value","error","helperText","Button","color","disabled","MenuButton","children","elements","React","useState","anchorEl","setAnchorEl","handleClose","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","map","element","MenuItem","func","action","card","margin","getMenuElements","bookstores","moveQuoteFunc","quoteId","fromId","filter","bookstore","BookstoreQuotes","quotes","bookstoreId","useContext","BookstoreCtx","deleteQuote","moveQuote","quote","Card","CardContent","CardActions","IconButton","aria-label","details","summary","root","Bookstores","onBookstoreDelete","Accordion","AccordionSummary","expandIcon","AccordionDetails","Bookstore","bookStoreContext","addBookstore","deleteBookstore","bookstoreName"],"mappings":"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","file":"static/js/4.3ed7e2b6.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport validator from 'validator';\n\nconst initialValues = {\n\tname: '',\n};\n\nconst nameValidator = (name) => {\n\tif (!name) {\n\t\treturn 'Debes ingresar un nombre';\n\t}\n\tif (!validator.isAlpha(name, 'es-ES', { ignore: ' -' })) {\n\t\treturn 'El nombre sólo debe contener alfanuméricos';\n\t}\n\treturn null;\n};\n\nconst useStyles = makeStyles((theme) => ({\n\tform: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\tinput: {\n\t\tmarginBottom: theme.spacing(1),\n\t},\n}));\n\nconst BookstoreForm = ({ onAddBookstore }) => {\n\tconst classes = useStyles();\n\n\tconst validate = ({ name }) => {\n\t\tconst errors = {};\n\t\tconst nameError = nameValidator(name);\n\t\tif (nameError) {\n\t\t\terrors.name = nameError;\n\t\t}\n\t\treturn errors;\n\t};\n\n\tconst submitHandler = (values, { setSubmitting, resetForm }) => {\n\t\tonAddBookstore(values.name.trim());\n\t\tsetSubmitting(false);\n\t\tresetForm(initialValues);\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={initialValues}\n\t\t\tvalidate={validate}\n\t\t\tonSubmit={submitHandler}\n\t\t>\n\t\t\t{({\n\t\t\t\tvalues,\n\t\t\t\thandleChange,\n\t\t\t\thandleBlur,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\ttouched,\n\t\t\t\tisSubmitting,\n\t\t\t}) => (\n\t\t\t\t<form\n\t\t\t\t\tname=\"NewBookstore\"\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\tclassName={classes.form}\n\t\t\t\t>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tplaceholder=\"Nombre de librería\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\terror={!!errors.name && touched.name}\n\t\t\t\t\t\thelperText={!!errors.name && touched.name && errors.name}\n\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCrear\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nBookstoreForm.propTypes = {\n\tonAddBookstore: PropTypes.func.isRequired,\n};\n\nexport default BookstoreForm;\n","import Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MenuButton = ({ children, elements }) => {\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\n\tconst handleClick = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst handleItemClick = (func) => () => {\n\t\tfunc();\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div onClick={handleClick}>{children}</div>\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t{elements.map((element) => (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tkey={element.name}\n\t\t\t\t\t\tonClick={handleItemClick(element.action)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{element.name}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t))}\n\t\t\t</Menu>\n\t\t</>\n\t);\n};\n\nMenuButton.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\telements: PropTypes.array.isRequired,\n};\n\nexport default MenuButton;\n","import Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport ImportExport from '@material-ui/icons/ImportExport';\nimport MenuButton from 'components/MenuButton';\nimport BookstoreCtx from 'context/bookstore';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n\tcard: {\n\t\twidth: '100%',\n\t\tmargin: theme.spacing(1, 0),\n\t},\n}));\n\nconst getMenuElements = (bookstores, moveQuoteFunc, quoteId, fromId) => {\n\tconst filteredBookstores = bookstores.filter(\n\t\t(bookstore) => bookstore.id !== fromId\n\t);\n\tconst names = filteredBookstores.map((bookstore) => {\n\t\treturn {\n\t\t\tname: bookstore.name,\n\t\t\taction: () => {\n\t\t\t\tmoveQuoteFunc(quoteId, fromId, bookstore.id);\n\t\t\t},\n\t\t};\n\t});\n\treturn names;\n};\n\nconst BookstoreQuotes = ({ quotes, bookstoreId }) => {\n\tconst classes = useStyles();\n\tconst { bookstores, deleteQuote, moveQuote } = React.useContext(BookstoreCtx);\n\n\treturn (\n\t\t<>\n\t\t\t{quotes.map((quote) => (\n\t\t\t\t<Card key={quote.id} className={classes.card}>\n\t\t\t\t\t<CardContent>{quote.quote}</CardContent>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<MenuButton\n\t\t\t\t\t\t\telements={getMenuElements(\n\t\t\t\t\t\t\t\tbookstores,\n\t\t\t\t\t\t\t\tmoveQuote,\n\t\t\t\t\t\t\t\tquote.id,\n\t\t\t\t\t\t\t\tbookstoreId\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<IconButton aria-label=\"Move Quote\" color=\"secondary\">\n\t\t\t\t\t\t\t\t<ImportExport />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</MenuButton>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\taria-label=\"Delete Quote\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={() => deleteQuote(quote.id, bookstoreId)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DeleteForever />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nBookstoreQuotes.propTypes = {\n\tquotes: PropTypes.array.isRequired,\n\tbookstoreId: PropTypes.number.isRequired,\n};\n\nexport default BookstoreQuotes;\n","import Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport BookstoreQuotes from 'components/BookstoreQuotes';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n\tdetails: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t},\n\tsummary: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\talignItems: 'center',\n\t\twidth: '100%',\n\t},\n\troot: {\n\t\tmargin: theme.spacing(2),\n\t},\n}));\n\nconst Bookstores = ({ bookstores, onBookstoreDelete }) => {\n\tconst deleteBookstoreHandler = (id) => () => {\n\t\tonBookstoreDelete(id);\n\t};\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t{bookstores.map((bookstore) => (\n\t\t\t\t<Accordion key={bookstore.id}>\n\t\t\t\t\t<AccordionSummary\n\t\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\t\taria-label=\"Open bookstore\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className={classes.summary}>\n\t\t\t\t\t\t\t<h4>{bookstore.name}</h4>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label=\"Delete bookstore\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={deleteBookstoreHandler(bookstore.id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<DeleteForever />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</AccordionSummary>\n\t\t\t\t\t<AccordionDetails className={classes.details}>\n\t\t\t\t\t\t<BookstoreQuotes\n\t\t\t\t\t\t\tquotes={bookstore.quotes}\n\t\t\t\t\t\t\tbookstoreId={bookstore.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</AccordionDetails>\n\t\t\t\t</Accordion>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nBookstores.propTypes = {\n\tbookstores: PropTypes.array.isRequired,\n\tonBookstoreDelete: PropTypes.func.isRequired,\n};\n\nexport default Bookstores;\n","import BookstoreForm from 'components/BookstoreForm';\nimport Bookstores from 'components/Bookstores';\nimport bookStoreContext from 'context/bookstore';\nimport React from 'react';\n\nexport default function Bookstore() {\n\tconst { addBookstore, bookstores, deleteBookstore } =\n\t\tReact.useContext(bookStoreContext);\n\n\tconst newBookstoreHandler = (bookstoreName) => {\n\t\taddBookstore(bookstoreName);\n\t};\n\n\tconst deleteBookstoreHandler = (bookstoreId) => {\n\t\tdeleteBookstore(bookstoreId);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<BookstoreForm onAddBookstore={newBookstoreHandler} />\n\t\t\t<Bookstores\n\t\t\t\tbookstores={bookstores}\n\t\t\t\tonBookstoreDelete={deleteBookstoreHandler}\n\t\t\t/>\n\t\t</>\n\t);\n}\n"],"sourceRoot":""}