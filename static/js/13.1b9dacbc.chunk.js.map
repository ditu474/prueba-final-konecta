{"version":3,"sources":["hooks/use-http/index.js","services/breakingBad/index.js","services/quoteComments/index.js","components/QuoteComments/AddCommentForm/index.js","components/QuoteComments/CommentList/index.js","components/QuoteComments/index.js","components/QuoteItem/index.js","services/quoteRate/index.js","components/QuoteRates/RateList/index.js","components/QuoteRates/index.js","pages/Quote/index.js"],"names":["SEND_ACTION","SUCCESS_ACTION","ERROR_ACTION","httpReducer","state","action","newState","type","response","error","loading","responseData","errorMessage","useHttp","reqFunc","React","useReducer","httpState","dispatch","isMounted","useRef","useEffect","current","sendRequest","useCallback","params","a","res","message","BASE_URL","getBreakingBadCharacters","url","fetch","then","ok","json","Error","getCharactersFiltered","limit","offset","getAuthorQuotes","author","authorFix","trim","replace","getQuoteById","quoteId","QUOTE_COMMENTS_KEY","initialValues","comment","AddCommentForm","onAddComment","validate","errors","commentError","length","commentValidator","onSubmit","values","setSubmitting","resetForm","handleChange","handleBlur","handleSubmit","touched","isSubmitting","name","className","TextField","multiline","rows","variant","placeholder","id","onChange","onBlur","value","helperText","Button","color","disabled","style","marginTop","useStyles","makeStyles","root","width","maxWidth","CommentList","comments","classes","Card","List","map","ListItem","Divider","QuoteComments","useState","setComments","quoteComments","getSavedResource","quoteComment","find","quote","getQuoteComments","margin","prevComments","newComment","Math","random","quoteCommentsSaved","unshift","saveResource","saveQuoteComment","theme","card","fontStyle","fontSize","info","display","spacing","alignItems","h5","fontWeight","QuoteItem","history","useHistory","CardContent","series","CardActions","size","onClick","push","quote_id","QUOTE_RATE_KEY","RateList","content","rates","ListItemText","primary","rate","count","isHalf","activeColor","edit","QuoteRates","quoteRates","setQuoteRates","rateAverage","setRateAverage","savedQuoteRates","quoteRateObj","quoteRate","getQuoteRate","newRateAvrg","reduce","prevVal","currentVal","toFixed","newRating","newRate","totalRates","calculateNewRate","prevQuoteRates","saveQuoteRates","Quote","QuoteId","useParams","path","useRouteMatch","useHtpp","LoadingSpinner","exact"],"mappings":"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","file":"static/js/13.1b9dacbc.chunk.js","sourcesContent":["import React from 'react';\n\nconst SEND_ACTION = 'SEND';\nconst SUCCESS_ACTION = 'SUCCESS';\nconst ERROR_ACTION = 'ERROR';\nconst RESET_ACTION = 'RESET';\n\nconst httpReducer = (state, action) => {\n\tlet newState = state;\n\tswitch (action.type) {\n\t\tcase SEND_ACTION:\n\t\t\tnewState = {\n\t\t\t\tresponse: null,\n\t\t\t\terror: null,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase SUCCESS_ACTION:\n\t\t\tnewState = {\n\t\t\t\tresponse: action.responseData,\n\t\t\t\terror: null,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase ERROR_ACTION:\n\t\t\tnewState = {\n\t\t\t\tresponse: null,\n\t\t\t\terror: action.errorMessage,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase RESET_ACTION:\n\t\t\tnewState = {\n\t\t\t\tresponse: null,\n\t\t\t\terror: null,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn newState;\n\t}\n};\n\nexport default function useHttp(reqFunc) {\n\tconst [httpState, dispatch] = React.useReducer(httpReducer, {\n\t\tresponse: null,\n\t\tloading: false,\n\t\terror: null,\n\t});\n\tconst isMounted = React.useRef(true);\n\n\tReact.useEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false;\n\t\t};\n\t}, []);\n\n\tconst sendRequest = React.useCallback(\n\t\tasync (params) => {\n\t\t\tdispatch({\n\t\t\t\ttype: SEND_ACTION,\n\t\t\t});\n\t\t\ttry {\n\t\t\t\tconst res = await reqFunc(params);\n\t\t\t\tif (isMounted.current) {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: SUCCESS_ACTION,\n\t\t\t\t\t\tresponseData: res,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: ERROR_ACTION,\n\t\t\t\t\terrorMessage: err.message || 'Something went wrong!',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[reqFunc]\n\t);\n\n\treturn {\n\t\t...httpState,\n\t\tsendRequest,\n\t};\n}\n","const BASE_URL = 'https://www.breakingbadapi.com/api';\n\nexport const getBreakingBadCharacters = async () => {\n\tconst url = `${BASE_URL}/characters`;\n\treturn fetch(url).then((res) => {\n\t\tif (res.ok) return res.json();\n\t\tthrow new Error('Error fetching Breaking Bad characters');\n\t});\n};\n\nexport const getCharactersFiltered = async ({ limit, offset }) => {\n\tconst url = `${BASE_URL}/characters?limit=${limit}&offset=${offset}`;\n\treturn fetch(url).then((res) => {\n\t\tif (res.ok) return res.json();\n\t\tthrow new Error('Error fetching Breaking Bad characters');\n\t});\n};\n\nexport const getAuthorQuotes = async ({ author }) => {\n\tconst authorFix = author.trim().replace(' ', '+');\n\tconst url = `${BASE_URL}/quote?author=${authorFix}`;\n\treturn fetch(url).then((res) => {\n\t\tif (res.ok) return res.json();\n\t\tthrow new Error(`Error fetching quotes for ${author}`);\n\t});\n};\n\nexport const getQuoteById = async ({ quoteId }) => {\n\tconst url = `${BASE_URL}/quotes/${quoteId}`;\n\treturn fetch(url).then((res) => {\n\t\tif (res.ok) return res.json();\n\t\tthrow new Error(`Error fetching quote with ID: ${quoteId}`);\n\t});\n};\n","import { getSavedResource, saveResource } from 'services/localStorage';\n\nconst QUOTE_COMMENTS_KEY = 'quoteComments';\n\nexport const getQuoteComments = (quoteId) => {\n\tconst quoteComments = getSavedResource(QUOTE_COMMENTS_KEY);\n\n\tif (quoteComments.length === 0) return [];\n\n\tconst quoteComment = quoteComments.find((quote) => quote.id === quoteId);\n\tif (!quoteComment) {\n\t\treturn [];\n\t}\n\n\treturn quoteComment.comments;\n};\n\nexport const saveQuoteComment = (quoteId, comment) => {\n\tconst quoteCommentsSaved = getSavedResource(QUOTE_COMMENTS_KEY);\n\tif (quoteCommentsSaved.length === 0) {\n\t\tsaveResource([{ id: quoteId, comments: [comment] }], QUOTE_COMMENTS_KEY);\n\t\treturn;\n\t}\n\n\tconst quoteComment = quoteCommentsSaved.find((quote) => quote.id === quoteId);\n\tif (!quoteComment) {\n\t\tsaveResource(\n\t\t\t[{ id: quoteId, comments: [comment] }, ...quoteCommentsSaved],\n\t\t\tQUOTE_COMMENTS_KEY\n\t\t);\n\t\treturn;\n\t}\n\n\tquoteComment.comments.unshift(comment);\n\tsaveResource(quoteCommentsSaved, QUOTE_COMMENTS_KEY);\n};\n","import { Button, TextField } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst initialValues = {\n\tcomment: '',\n};\n\nconst commentValidator = (comment) => {\n\tif (!comment) return 'No puede estar vacio';\n\tif (comment.length > 200) return 'Máximo 200 caracteres';\n\treturn '';\n};\n\nconst AddCommentForm = ({ onAddComment }) => {\n\tconst validate = ({ comment }) => {\n\t\tconst errors = {};\n\t\tconst commentError = commentValidator(comment);\n\t\tif (commentError) {\n\t\t\terrors.comment = commentError;\n\t\t}\n\t\treturn errors;\n\t};\n\n\tconst submitHandler = (values, { setSubmitting, resetForm }) => {\n\t\tonAddComment(values.comment.trim());\n\t\tsetSubmitting(false);\n\t\tresetForm(initialValues);\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={initialValues}\n\t\t\tvalidate={validate}\n\t\t\tonSubmit={submitHandler}\n\t\t>\n\t\t\t{({\n\t\t\t\tvalues,\n\t\t\t\thandleChange,\n\t\t\t\thandleBlur,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\ttouched,\n\t\t\t\tisSubmitting,\n\t\t\t}) => (\n\t\t\t\t<form\n\t\t\t\t\tname=\"NewComment\"\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\tclassName=\"center-column-childs\"\n\t\t\t\t>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\t\tplaceholder=\"Escribe un comentario...\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"comment\"\n\t\t\t\t\t\tid=\"comment\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tvalue={values.comment}\n\t\t\t\t\t\terror={!!errors.comment && touched.comment}\n\t\t\t\t\t\thelperText={!!errors.comment && touched.comment && errors.comment}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tstyle={{ marginTop: '1rem' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tComentar\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nAddCommentForm.propTypes = {\n\tonAddComment: PropTypes.func.isRequired,\n};\n\nexport default AddCommentForm;\n","import { Card, Divider, List, ListItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\twidth: '100%',\n\t\tmaxWidth: 600,\n\t},\n});\n\nconst CommentList = ({ comments }) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<h3>Comentarios ({comments.length})</h3>\n\t\t\t<Card variant=\"outlined\">\n\t\t\t\t<List>\n\t\t\t\t\t{comments.map((comment) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ListItem key={comment.id}>\n\t\t\t\t\t\t\t\t<p>{comment.comment}</p>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t</>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nCommentList.propTypes = {\n\tcomments: PropTypes.array.isRequired,\n};\n\nexport default CommentList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getQuoteComments, saveQuoteComment } from 'services/quoteComments';\nimport AddCommentForm from './AddCommentForm';\nimport CommentList from './CommentList';\n\nconst QuoteComments = ({ quoteId }) => {\n\tconst [comments, setComments] = React.useState([]);\n\n\tReact.useEffect(() => {\n\t\tsetComments(getQuoteComments(quoteId));\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tconst addCommentHandler = (comment) => {\n\t\tsetComments((prevComments) => {\n\t\t\tconst newComment = { id: Math.random(), comment };\n\t\t\tsaveQuoteComment(quoteId, newComment);\n\t\t\tconst newComments = [newComment, ...prevComments];\n\t\t\treturn newComments;\n\t\t});\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tmargin: '2rem 0',\n\t\t\t}}\n\t\t\tclassName=\"center-column-childs\"\n\t\t>\n\t\t\t<AddCommentForm onAddComment={addCommentHandler} />\n\t\t\t<CommentList comments={comments} />\n\t\t</div>\n\t);\n};\n\nQuoteComments.propTypes = {\n\tquoteId: PropTypes.number.isRequired,\n};\n\nexport default QuoteComments;\n","import { Button, Card, CardActions, CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n\tcard: {\n\t\twidth: 'fit-content',\n\t\tmargin: '0 auto',\n\t},\n\tquote: {\n\t\tfontStyle: 'italic',\n\t\tfontSize: '1.2rem',\n\t},\n\tinfo: {\n\t\tdisplay: 'flex',\n\t\tmargin: theme.spacing(1, 0),\n\t\talignItems: 'center',\n\t},\n\th5: {\n\t\tfontWeight: 'normal',\n\t\tfontSize: '1rem',\n\t\tmargin: theme.spacing(0, 1),\n\t},\n}));\n\nconst QuoteItem = ({ quote }) => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\n\tconst handleRateClick = () => {\n\t\thistory.push(`/quote/${quote.quote_id}/rate`);\n\t};\n\n\tconst handleCommentsClick = () => {\n\t\thistory.push(`/quote/${quote.quote_id}/comments`);\n\t};\n\n\treturn (\n\t\t<Card variant=\"outlined\" className={classes.card}>\n\t\t\t<CardContent>\n\t\t\t\t<em className={classes.quote}>\"{quote.quote}\"</em>\n\t\t\t\t<div className={classes.info}>\n\t\t\t\t\t<label>Author: </label>\n\t\t\t\t\t<h5 className={classes.h5}>{quote.author}</h5>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.info}>\n\t\t\t\t\t<label>Serie: </label>\n\t\t\t\t\t<h5 className={classes.h5}>{quote.series}</h5>\n\t\t\t\t</div>\n\t\t\t</CardContent>\n\t\t\t<CardActions>\n\t\t\t\t<Button size=\"small\" color=\"secondary\" onClick={handleCommentsClick}>\n\t\t\t\t\tComentarios\n\t\t\t\t</Button>\n\t\t\t\t<Button size=\"small\" color=\"secondary\" onClick={handleRateClick}>\n\t\t\t\t\tCalificación\n\t\t\t\t</Button>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n};\n\nQuoteItem.propTypes = {\n\tquote: PropTypes.shape({\n\t\tquote: PropTypes.string.isRequired,\n\t\tauthor: PropTypes.string.isRequired,\n\t\tseries: PropTypes.string.isRequired,\n\t}),\n};\n\nexport default QuoteItem;\n","import { getSavedResource, saveResource } from 'services/localStorage';\n\nconst QUOTE_RATE_KEY = 'quoteRate';\n\nexport const getQuoteRate = (quoteId) => {\n\tconst quoteRates = getSavedResource(QUOTE_RATE_KEY);\n\n\tif (quoteRates.length === 0) return [];\n\n\tconst quoteRateObj = quoteRates.find((quoteRate) => quoteRate.id === quoteId);\n\tif (!quoteRateObj) {\n\t\treturn [];\n\t}\n\treturn quoteRateObj.rates;\n};\n\nexport const saveQuoteRates = (quoteId, quoteRate) => {\n\tconst quoteRates = getSavedResource(QUOTE_RATE_KEY);\n\tif (quoteRates.length === 0) {\n\t\tsaveResource([{ id: quoteId, rates: [quoteRate] }], QUOTE_RATE_KEY);\n\t\treturn;\n\t}\n\n\tconst quoteRateObj = quoteRates.find((quoteRate) => quoteRate.id === quoteId);\n\tif (!quoteRateObj) {\n\t\tsaveResource(\n\t\t\t[{ id: quoteId, rates: [quoteRate] }, ...quoteRates],\n\t\t\tQUOTE_RATE_KEY\n\t\t);\n\t\treturn;\n\t}\n\n\tquoteRateObj.rates = [quoteRate, ...quoteRateObj.rates];\n\tsaveResource(quoteRates, QUOTE_RATE_KEY);\n};\n","import { List, ListItem, ListItemText } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ReactStars from 'react-rating-stars-component';\n\nconst RateList = ({ rates }) => {\n\tlet content;\n\tif (rates.length === 0) {\n\t\tcontent = (\n\t\t\t<ListItem>\n\t\t\t\t<ListItemText primary=\"Añade una calificación\" />\n\t\t\t</ListItem>\n\t\t);\n\t} else {\n\t\tcontent = rates.map((rate) => (\n\t\t\t<ListItem key={rate.id}>\n\t\t\t\t<ReactStars\n\t\t\t\t\tcount={5}\n\t\t\t\t\tvalue={rate.rate}\n\t\t\t\t\tsize={40}\n\t\t\t\t\tisHalf={true}\n\t\t\t\t\tactiveColor=\"#ffd700\"\n\t\t\t\t\tedit={false}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t));\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Historial</h2>\n\t\t\t<List>{content}</List>\n\t\t</>\n\t);\n};\n\nRateList.propTypes = {\n\trates: PropTypes.array.isRequired,\n};\n\nexport default RateList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactStars from 'react-rating-stars-component';\nimport { getQuoteRate, saveQuoteRates } from 'services/quoteRate';\nimport RateList from './RateList';\n\nconst QuoteRates = ({ quoteId }) => {\n\tconst [quoteRates, setQuoteRates] = React.useState([]);\n\tconst [rateAverage, setRateAverage] = React.useState(0);\n\n\tReact.useEffect(() => {\n\t\tconst savedQuoteRates = getQuoteRate(quoteId);\n\t\tsetQuoteRates(savedQuoteRates);\n\n\t\tif (savedQuoteRates.length > 0) {\n\t\t\tconst sum = savedQuoteRates.reduce(\n\t\t\t\t(prevVal, currentVal) => prevVal + currentVal.rate,\n\t\t\t\t0\n\t\t\t);\n\t\t\tconst newRateAvrg = sum / savedQuoteRates.length;\n\t\t\tsetRateAverage(newRateAvrg);\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tconst calculateNewRate = (newRate) => {\n\t\tconst totalRates = quoteRates.length;\n\t\tconst lastSum = rateAverage * totalRates;\n\t\tconst newAverage = (lastSum + newRate) / (totalRates + 1);\n\t\tsetRateAverage(newAverage);\n\t};\n\n\tconst addRateHandler = (newRating) => {\n\t\tcalculateNewRate(newRating);\n\t\tconst rate = { id: Math.random() + newRating, rate: newRating };\n\t\tsetQuoteRates((prevQuoteRates) => [rate, ...prevQuoteRates]);\n\t\tsaveQuoteRates(quoteId, rate);\n\t};\n\n\treturn (\n\t\t<div className=\"center-column-childs\">\n\t\t\t<h4>Promedio: {rateAverage.toFixed(1)}</h4>\n\t\t\t<ReactStars\n\t\t\t\tcount={5}\n\t\t\t\tonChange={addRateHandler}\n\t\t\t\tsize={40}\n\t\t\t\tisHalf={true}\n\t\t\t\tactiveColor=\"#ffd700\"\n\t\t\t/>\n\t\t\t<RateList rates={quoteRates} />\n\t\t</div>\n\t);\n};\n\nQuoteRates.propTypes = {\n\tquoteId: PropTypes.number.isRequired,\n};\n\nexport default QuoteRates;\n","import LoadingSpinner from 'components/LoadingSpinner';\nimport QuoteComments from 'components/QuoteComments';\nimport QuoteItem from 'components/QuoteItem';\nimport QuoteRates from 'components/QuoteRates';\nimport useHtpp from 'hooks/use-http';\nimport React from 'react';\nimport { Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\nimport { getQuoteById } from 'services/breakingBad';\n\nconst Quote = () => {\n\tconst { id } = useParams();\n\tconst QuoteId = +id;\n\tconst { path } = useRouteMatch();\n\tconst { response, loading, error, sendRequest } = useHtpp(getQuoteById);\n\n\tReact.useEffect(() => {\n\t\tsendRequest({ quoteId: QuoteId });\n\t}, [QuoteId, sendRequest]);\n\n\tif (loading) {\n\t\treturn <LoadingSpinner />;\n\t} else if (error || !response || response.length === 0) {\n\t\treturn <h4>No se logró encontrar la información de la frase {QuoteId}</h4>;\n\t}\n\n\treturn (\n\t\t<div className=\"center-column-childs\">\n\t\t\t<QuoteItem quote={response[0]} />\n\t\t\t<Switch>\n\t\t\t\t<Route path={`${path}/comments`} exact>\n\t\t\t\t\t<QuoteComments quoteId={QuoteId} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={`${path}/rate`} exact>\n\t\t\t\t\t<QuoteRates quoteId={QuoteId} />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n};\n\nexport default Quote;\n"],"sourceRoot":""}